{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","username","ecosystem","id","twitterurl","className","href","target","rel","alt","src","CardList","robots","cardsArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","value","state","console","log","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAuBeA,EApBF,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,GAEhCC,EAAU,gCAA4BH,GAC5C,OACI,qBAAKI,UAAU,sDAAf,SACI,oBAAGC,KAAMF,EAAYG,OAAO,SAASC,IAAI,aAAaH,UAAU,eAAhE,UACI,qBAAKI,IAAI,MAAMC,IAAG,+BAA0BP,EAA1B,cAClB,gCACI,6BAAKH,IACL,gCACI,qBAAKS,IAAI,UAAUJ,UAAU,cAAcK,IAAI,wEAC/C,mBAAGJ,KAAMF,EAAYG,OAAO,SAA5B,SAAsCN,IACtC,mBAAGI,UAAU,MAAb,SAAoBH,gBCI7BS,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAaD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OAAQ,cAAC,EAAD,CAEJb,GAAIS,EAAOI,GAAGb,GACdH,KAAMY,EAAOI,GAAGhB,KAChBC,SAAUW,EAAOI,GAAGf,SACpBC,UAAWU,EAAOI,GAAGd,WAJhBU,EAAOI,GAAGb,OAMvB,OACI,8BACKU,KCAEI,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKb,UAAU,MAAf,SACI,uBACAA,UAAU,mCAAmCc,KAAK,SAClDC,YAAY,mBACZC,SAAUH,OCEPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCwCJC,G,wDArCX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMxB,OAAO2B,SAZ1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRqB,YAAa,IAEjBG,QAAQC,IAAI,eANF,E,qDASd,WAAqB,IAAD,OAChBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAU,EAAKV,SAAS,CAAEpB,OAAQ8B,S,oBAOjI,WACI,MAA+BC,KAAKR,MAA5BvB,EAAR,EAAQA,OAAQqB,EAAhB,EAAgBA,YACVW,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASf,EAAYc,kBAGzD,OAAQnC,EAAOqC,OAGH,sBAAK5C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWa,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQgC,SANtC,6C,GAzBUM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aadc1be9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({name, username, ecosystem, id}) => {\r\n    // const {name,email, id} = props;\r\n    const twitterurl = `https:www.twitter.com/${username}`;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <a href={twitterurl} target='_blank' rel='noreferrer' className='no-underline'>\r\n                <img alt='pic' src={`https://robohash.org/${id}?200x200`}/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <div >\r\n                        <img alt='twitter' className='twittericon' src='https://logos-world.net/wp-content/uploads/2020/04/Twitter-Logo.png'/>\r\n                        <a href={twitterurl} target='_blank'>{username}</a>\r\n                        <p className='ttu'>{ecosystem}</p>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardsArray = robots.map((user,i) => {\r\n        return (<Card\r\n            key={robots[i].id}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            username={robots[i].username}\r\n            ecosystem={robots[i].ecosystem}/>);\r\n    });\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue' type='search' \r\n            placeholder='Search CryptoBot'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '570px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n// Smart component because it has state. Smart components tend to have the class syntax.\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n        console.log('constructor');\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {this.setState({ robots: users})});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n        // if large amount of users and gonna take time, do this if statement.\r\n        return !robots.length ?\r\n        <h1>Loading</h1> :\r\n        (\r\n                    <div className='tc'>\r\n                        <h1>RoboFriends</h1>\r\n                        <SearchBox searchChange={this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <CardList robots={filteredRobots}/>\r\n                        </Scroll>\r\n                    </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default App;\r\n\r\n// STATE = an object that describes your application. example: robots.\r\n// PROPS = things that come out of STATE\r\n// parent feeds STATE into a child component and as soon as a child component receives the STATE, it a property (prop).\r\n// Child component can never change the property.","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// {robots} because it doesn't have export default which means that it can return multiple things.\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}